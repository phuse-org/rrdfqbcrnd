# Start fuseki using
# (CFGFILE=${PWD}/fuseki-config-example.ttl ;cd /opt/jena-fuseki-2.0.0; ./fuseki-server --config=${CFGFILE} ) 

@prefix :        <#> .
@prefix fuseki:  <http://jena.apache.org/fuseki#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix tdb:     <http://jena.hpl.hp.com/2008/tdb#> .
@prefix ja:      <http://jena.hpl.hp.com/2005/11/Assembler#> .

[] rdf:type fuseki:Server ;
   fuseki:services (
     <#servicerexample>
   ) .

# Custom code.
[] ja:loadClass "com.hp.hpl.jena.tdb.TDB" .

# TDB
tdb:DatasetTDB  rdfs:subClassOf  ja:RDFDataset .
tdb:GraphTDB    rdfs:subClassOf  ja:Model .

## ---------------------------------------------------------------
## Updatable in-memory dataset.

## ---------------------------------------------------------------
## Read-only access to a small books database.

<#servicerexample> rdf:type fuseki:Service ;
    fuseki:name                     "example" ;    # http://host:port/books
    fuseki:serviceQuery             "query" ;    # SPARQL query service
    fuseki:serviceReadGraphStore    "get" ;      # SPARQL Graph store protocol (read only)
    fuseki:dataset                   <#example> ;
    # Configuration
    .
    
    
<#example>    rdf:type ja:RDFDataset ;
    rdfs:label "RDF data cube example" ;
    ja:namedGraph [
ja:graphName <http://example.org/orig> ; 
ja:graph
      [ rdfs:label "example" ;
        a ja:MemoryModel ;
        ja:content [ja:externalContent <file:example.ttl> ] ;
      ] ;
] ;
    ja:namedGraph [
ja:graphName <http://example.org/copy> ; 
ja:graph
      [ rdfs:label "example fails IC14" ;
        a ja:MemoryModel ;
        ja:content [ja:externalContent <file:example-fails-IC14.ttl> ] ;
      ] ;
      ] ;
    .

